services:
  # traefik:
  #   image: traefik:v3.3
  #   container_name: traefik
  #   restart: unless-stopped
  #   command:
  #     - "--api.dashboard=true" # Enable dashboard
  #     - "--providers.docker=true" # Enable Docker provider
  #     - "--providers.docker.exposedbydefault=false" # Don't expose all containers by default
  #     - "--entrypoints.web.address=:80" # HTTP
  #     - "--entrypoints.websecure.address=:443" # HTTPS
  #     - "--certificatesresolvers.duckdns.acme.dnschallenge=true"
  #     - "--certificatesresolvers.duckdns.acme.dnschallenge.provider=duckdns"
  #     - "--certificatesresolvers.duckdns.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53" # Fix DNS lookup issue
  #     - "--certificatesresolvers.duckdns.acme.email=dell4sea@gmail.com"
  #     - "--certificatesresolvers.duckdns.acme.storage=/letsencrypt/acme.json"
  #     - "--log.level=INFO" # Logging level
  #     - "--accesslog=true" # Enable access logs
  #   environment:
  #     DUCKDNS_TOKEN: "c7274fc7-88ca-4b43-aae3-8ac2feb49525"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./letsencrypt:/letsencrypt
  #   networks:
  #     - app-network
  #   depends_on:
  #     - frontend
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.traefik.rule=Host(`traefik.coodify.duckdns.org`)"
  #     - "traefik.http.routers.traefik.entrypoints=websecure"
  #     - "traefik.http.routers.traefik.tls.certresolver=duckdns"
  #     - "traefik.http.services.traefik.loadbalancer.server.port=8080"
  #     - "traefik.http.middlewares.auth.basicauth.users=admin:$2y$05$ybrOVgw3yFf.b/eROc9eeuHIWfASNAf3c3MT.4Pg1kAQ9XTd7TeJa"

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "3000:3000"
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.frontend.rule=Host(`coodify.duckdns.org`)"
    #   - "traefik.http.routers.frontend.entrypoints=websecure"
    #   - "traefik.http.routers.frontend.tls.certresolver=duckdns"
    #   - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  # backend:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   container_name: backend
  #   restart: unless-stopped
  #   networks:
  #     - app-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.backend.rule=Host(`api.coodify.duckdns.org`)"
  #     - "traefik.http.routers.backend.entrypoints=websecure"
  #     - "traefik.http.routers.backend.tls.certresolver=duckdns"
  #     - "traefik.http.services.backend.loadbalancer.server.port=5050"

  # postgres:
  #   image: postgres:latest
  #   container_name: postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=1234
  #     - POSTGRES_DB=postgres
  #   networks:
  #     - app-network
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
